<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://rawgit.com/moment/moment/2.2.1/min/moment.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <title>Task 2</title>
</head>
<body>
    <h1>Welcome to Task 2</h1>
    <form action="/api/user?name=chuong" onsubmit="return myFunction(event)">
        <label for="gsearch">Search name/email of user:</label>
        <input type="search" id="search-user">
        <input type="submit">
    </form>
   
    <table class="table" id="table-user">
        <thead>
          <tr>
            <th scope="col">Username</th>
            <th scope="col">Email</th>
            <th scope="col">Birthdate</th>
            <th><button class="btn btn-primary"onclick="updateUser()">Click to update users</button></th>
          </tr>
        </thead>
        <tbody>
          
        </tbody>
      </table>
</body>
</html>

<script>
    async function myFunction(e) {
        let name = document.getElementById("search-user").value;
        e.preventDefault(); 
        console.log(name);
        $('#table-user tbody tr').remove();
        try {
            const response = await fetch(`/api/user?name=${name}`, {
                method: 'GET', // *GET, POST, PUT, DELETE, etc.
                mode: 'cors', // no-cors, *cors, same-origin
                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', // include, *same-origin, omit
                headers: {
                    'Content-Type': 'application/json'
                    // 'Content-Type': 'application/x-www-form-urlencoded',
                }
            });
            const responceData = await response.json();
            responceData.data.forEach((row) => {
                let date = moment(row.birthdate).format("YYYY-MM-DD");  
                $("#table-user tbody").append(`<tr id='${row._id}'>
                                                    <td contenteditable="true">${row.username}</td>
                                                    <td contenteditable="true">${row.email}</td>
                                                    <td contenteditable="true">${date}</td>
                                                </tr>`);
            })
            
            return responceData;
        } catch (error) {
            return error
        }
    }
    async function updateUser() {
        let table = document.getElementById("table-user");
        let listOfUser = []
        for (let i = 1; i < table.rows.length; i++) {
            const _id = table.rows[i].id;
            const username = table.rows[i].cells[0].innerHTML;
            const email = table.rows[i].cells[1].innerHTML;
            const birthdate = table.rows[i].cells[2].innerHTML;
            listOfUser.push({
                _id,
                username,
                email,
                birthdate
            })
            //console.log(username, email, birthdate, _id);;
        }
        try {
            const response = await fetch(`/api/user`, {
                method: 'POST', // *GET, POST, PUT, DELETE, etc.
                mode: 'cors', // no-cors, *cors, same-origin
                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', // include, *same-origin, omit
                headers: {
                    'Content-Type': 'application/json'
                    // 'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: JSON.stringify(listOfUser)
            });
            const responseData = await response.json()
            alert(responseData.data)
            await myFunction(e)
            return response
        } catch (error) {
            return error
        }

    }
</script>